// Copyright (C) 2020  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "06/22/2021 19:17:19"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          Adil_BasicSymbol
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module Adil_BasicSymbol_vlg_vec_tst();
// constants                                           
// general purpose registers
reg Adil_IN_A;
reg Adil_IN_B;
reg Adil_IN_C;
reg Adil_IN_D;
// wires                                               
wire Adil_OUT_Z;

// assign statements (if any)                          
Adil_BasicSymbol i1 (
// port map - connection between master ports and signals/registers   
	.Adil_IN_A(Adil_IN_A),
	.Adil_IN_B(Adil_IN_B),
	.Adil_IN_C(Adil_IN_C),
	.Adil_IN_D(Adil_IN_D),
	.Adil_OUT_Z(Adil_OUT_Z)
);
initial 
begin 
#1000000 $finish;
end 

// Adil_IN_A
initial
begin
	Adil_IN_A = 1'b0;
	Adil_IN_A = #400000 1'b1;
	Adil_IN_A = #400000 1'b0;
end 

// Adil_IN_B
initial
begin
	Adil_IN_B = 1'b0;
	Adil_IN_B = #200000 1'b1;
	Adil_IN_B = #200000 1'b0;
	Adil_IN_B = #200000 1'b1;
	Adil_IN_B = #200000 1'b0;
end 

// Adil_IN_C
initial
begin
	repeat(4)
	begin
		Adil_IN_C = 1'b0;
		Adil_IN_C = #100000 1'b1;
		# 100000;
	end
	Adil_IN_C = 1'b0;
end 

// Adil_IN_D
initial
begin
	repeat(8)
	begin
		Adil_IN_D = 1'b0;
		Adil_IN_D = #50000 1'b1;
		# 50000;
	end
	Adil_IN_D = 1'b0;
end 
endmodule

